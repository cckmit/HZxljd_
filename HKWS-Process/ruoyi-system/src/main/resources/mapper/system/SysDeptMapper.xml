<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysDeptMapper">

	<resultMap type="SysDept" id="SysDeptResult">
		<id     property="deptId"     column="dept_id"     />
		<result property="deptUuid"   column="dept_uuid"   />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="deptName"   column="dept_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="level"      column="level"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
		<result property="dingId" column="ding_id" />
	</resultMap>
	
	<sql id="selectDeptVo">
        select d.dept_id, d.dept_uuid,d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader,d.level, d.phone, d.email, d.status, d.level,d.del_flag, d.create_by, d.create_time
        from sys_dept d
    </sql>
    
	<select id="selectRoleDeptTree" parameterType="Long" resultType="String">
		select concat(d.dept_id, d.dept_name) as dept_name
		from sys_dept d
			left join sys_role_dept rd on d.dept_id = rd.dept_id
		where d.del_flag = '0' and rd.role_id = #{roleId}
		order by d.parent_id, d.order_num
	</select>

	<select id="selectRanksDeptTree" parameterType="Long" resultType="String">
		select concat(d.dept_id, d.dept_name) as dept_name
		from sys_dept d
			left join sys_ranks_dept rd on d.dept_id = rd.dept_id
		where d.del_flag = '0' and rd.ranks_id = #{ranksId}
		order by d.parent_id, d.order_num
	</select>


	<select id="selectAssignDeptTree" resultType="String">
		select concat(dept_id, dept_name) as dept_name
		from sys_dept
		where del_flag = '0'
		<if test="deptArr != null">
			and dept_id in
			<foreach collection="deptArr" item="name" open="(" separator="," close=")">
				#{name}
			</foreach>
		</if>
		order by parent_id, order_num
	</select>
	
	<select id="selectDeptList" parameterType="SysDept" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where d.del_flag = '0'
		<if test="level != null and level != ''">
			AND d.level = #{level}
		</if>
        <if test="parentId != null and parentId != 0">
			AND d.parent_id = #{parentId}
		</if>
		<if test="deptName != null and deptName != ''">
			AND d.dept_name like concat('%', #{deptName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND d.status = #{status}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by d.parent_id, d.order_num
    </select>
	
	<select id="checkDeptExistUser" parameterType="Long" resultType="int">
		select count(1) from sys_user where dept_id = #{deptId} and del_flag = '0'
	</select>
	
	<select id="selectDeptCount" parameterType="SysDept" resultType="int">
		select count(1) from sys_dept
		where del_flag = '0'
		<if test="deptId != null and deptId != 0"> and dept_id = #{deptId} </if>
		<if test="parentId != null and parentId != 0"> and parent_id = #{parentId} </if>
	</select>
	
	<select id="checkDeptNameUnique" resultMap="SysDeptResult">
	    <include refid="selectDeptVo"/>
		where dept_name=#{deptName} and parent_id = #{parentId}
	</select>

	<select id="selectDeptById" parameterType="Long" resultMap="SysDeptResult">
		select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status,d.level,
			(select dept_name from sys_dept where dept_id = d.parent_id) parent_name
		from sys_dept d
		where d.dept_id = #{deptId}
	</select>

	<select id="selectChildrenDeptById" parameterType="Long" resultMap="SysDeptResult">
		select * from sys_dept where find_in_set(#{deptId}, ancestors)
	</select>
	
	<insert id="insertDept" parameterType="SysDept">
 		insert into sys_dept(
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="deptUuid != null and deptUuid != ''">dept_uuid,</if>
 			<if test="parentId != null and parentId != 0">parent_id,</if>
 			<if test="deptName != null and deptName != ''">dept_name,</if>
 			<if test="ancestors != null and ancestors != ''">ancestors,</if>
 			<if test="orderNum != null and orderNum != ''">order_num,</if>
 			<if test="leader != null and leader != ''">leader,</if>
 			<if test="phone != null and phone != ''">phone,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="status != null">status,</if>
 			<if test="level != null">level,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="deptId != null and deptId != 0">#{deptId},</if>
 			<if test="deptUuid != null and deptUuid != ''">#{deptUuid},</if>
 			<if test="parentId != null and parentId != 0">#{parentId},</if>
 			<if test="deptName != null and deptName != ''">#{deptName},</if>
 			<if test="ancestors != null and ancestors != ''">#{ancestors},</if>
 			<if test="orderNum != null and orderNum != ''">#{orderNum},</if>
 			<if test="leader != null and leader != ''">#{leader},</if>
 			<if test="phone != null and phone != ''">#{phone},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="status != null">#{status},</if>
 			<if test="level != null">#{level},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateDept" parameterType="SysDept">
 		update sys_dept
 		<set>
 			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
 			<if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
 			<if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
 			<if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
 			<if test="leader != null">leader = #{leader},</if>
 			<if test="phone != null">phone = #{phone},</if>
 			<if test="email != null">email = #{email},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="level != null and level != ''">level = #{level},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate()
 		</set>
 		where dept_id = #{deptId}
	</update>
	
	<update id="updateDeptChildren" parameterType="java.util.List">
	    update sys_dept set ancestors =
	    <foreach collection="depts" item="item" index="index"
	        separator=" " open="case dept_id" close="end">
	        when #{item.deptId} then #{item.ancestors}
	    </foreach>
	    where dept_id in
	    <foreach collection="depts" item="item" index="index"
	        separator="," open="(" close=")">
	        #{item.deptId}
	    </foreach>
	 </update>

	<delete id="deleteDeptById" parameterType="Long">
		update sys_dept set del_flag = '2' where dept_id = #{deptId}
	</delete>
	
	<update id="updateDeptStatus" parameterType="SysDept">
 	    update sys_dept
 	    <set>
 	        <if test="status != null and status != ''">status = #{status},</if>
 	        <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 	        update_time = sysdate()
        </set>
 	    where dept_id in (${parentId})
	</update>

	<select id="findChangeSysDept" resultMap="SysDeptResult" parameterType="SysDept">
		<include refid="selectDeptVo"/>
		where d.del_flag = '0'
		<if test="level != null and level != ''">
			AND d.level = #{level}
		</if>
		<if test="deptName != null and deptName != ''">
			AND d.dept_name = #{deptName}
		</if>
		<if test="deptId != null and deptId != ''">
			AND d.dept_id = #{deptId}
		</if>
	</select>

	<insert id="insertSysDept" keyProperty="deptId" useGeneratedKeys="true" parameterType="SysDept">
		insert into sys_dept(
		dept_uuid,
		parent_id,
		dept_name,
		create_time
		)values (
		#{deptUuid},
		#{parentId},
		#{deptName},
		#{createTime}
		)
	</insert>
	<insert id="insertSysDeptAll" keyProperty="deptId" useGeneratedKeys="true" parameterType="SysDept">
		insert into sys_dept(
		dept_uuid,
		parent_id,
		dept_name,
		create_time,
		ding_id
		)values (
		#{deptUuid},
		#{parentId},
		#{deptName},
		#{createTime},
		#{dingId}
		)
	</insert>

	<select id="findsysDeptUuid" resultMap="SysDeptResult" parameterType="java.lang.String">
		select * from sys_dept where dept_uuid = #{parentIndexCode}
	</select>

	<select id="findSysDeptCount" resultType="java.lang.Integer" parameterType="java.lang.String">
		select count(*) from sys_dept where dept_uuid = #{indexCode}
	</select>

	<!--查询用户信息和用户所属多级部门信息-->
	<select id="queryAllDeptByUser" parameterType="java.lang.Long" resultType="java.util.Map">
		SELECT u2.dept_id as deptId, u2.dept_name as deptName,u2.level
		FROM(
			 SELECT
					@id c_ids,
					(SELECT @id:=GROUP_CONCAT(parent_id) FROM sys_dept WHERE FIND_IN_SET(dept_id,@id)) p_ids,
					@l := @l+1 AS LEVEL
			 FROM sys_dept,(SELECT @id:=#{deptId}, @l := 0) b
			 WHERE @id IS NOT NULL
			) u1
		JOIN sys_dept u2  ON u1.c_ids = u2.dept_id
	</select>


	<select id="getUserByDeptLevel" resultType="com.ruoyi.system.domain.Daping.PercentResult">
		select t1.name,ifnull(t1.value+t2.value,0) as value FROM
			(
			select d1.dept_name as name,IFNULL(count(u1.user_id),0) as value from sys_dept d1
					 left join sys_user u1 on d1.dept_id = u1.dept_id
					 where d1.level = 2
					 group by d1.dept_name
			) t1 left JOIN
			(
			select d1.dept_name as name,count(u1.user_id) as value from sys_dept d1
					left join sys_dept d2 on d1.dept_id = d2.parent_id
					 left join sys_user u1 on d2.dept_id = u1.dept_id
					 where d2.level = 3
					 group by d1.dept_name
			) t2
			on t1.name = t2.name
	</select>
	
	<select id="queryDeptName" resultType="java.lang.Integer" parameterType="java.lang.String">
		select dept_id from sys_dept where dept_name=#{deptName}
	</select>

	<select id="queryDeptNameAll" resultMap="SysDeptResult" parameterType="SysDept">
		select * from sys_dept
		<where>
			1 = 1
			<if test="deptName != null and deptName !=''">
				and dept_name like concat('%', #{deptName}, '%')
			</if>
			and parent_id = '100'
			and del_flag = '0'
		</where>
	</select>

<!--	<select id="queryCommunityName" resultType="java.lang.Integer">
		select dept_id from  sys_dept where dept_name = '各村社' and del_flag = '0'
	</select>

	<select id="queryDeptNameAll" resultMap="SysDeptResult" parameterType="SysDept">
		select dept_id,dept_name from sys_dept where parent_id=#{parentId}
	</select>
	<select id="queryDeptNameAllList" resultMap="SysDeptResult" parameterType="java.lang.Integer">
		select dept_id,dept_name from sys_dept where parent_id=#{deptId}
	</select>

	<select id="queryGridName" resultType="java.lang.Integer" parameterType="SysDept">
		select dept_id from sys_dept where dept_name = #{deptName} and parent_id='1811308' and del_flag = '0'
	</select>-->
</mapper>