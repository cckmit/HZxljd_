<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysUserMapper">

	<resultMap type="SysUser" id="SysUserResult">
		<id     property="userId"       column="user_id"      />
		<result property="deptId"       column="dept_id"      />
		<result property="loginName"    column="login_name"   />
		<result property="userName"     column="user_name"    />
		<result property="userType"     column="user_type"    />
		<result property="email"        column="email"        />
		<result property="phonenumber"  column="phonenumber"  />
		<result property="sex"          column="sex"          />
		<result property="avatar"       column="avatar"       />
		<result property="password"     column="password"     />
		<result property="salt"         column="salt"         />
		<result property="status"       column="status"       />
		<result property="delFlag"      column="del_flag"     />
		<result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="remark"       column="remark"       />
		<result property="openId"       column="open_id"       />
		<result property="address"       column="address"       />
		<result property="isPartyMember" column="is_party_member"/>
		<result property="isLeagueMember" column="is_league_member"/>
		<result property="isRanks" 		column="is_ranks"/>
		<result property="leaderFlag" 		column="leader_flag"/>
		<association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
		<collection  property="roles"   javaType="java.util.List"        resultMap="RoleResult" />
	</resultMap>


	<resultMap type="SysUser" id="SysUserPostDeptRegionResult">
		<id     property="userId"       column="user_id"      />
		<result property="loginName"    column="login_name"   />
		<result property="userName"     column="user_name"    />
		<result property="userType"     column="user_type"    />
		<result property="email"        column="email"        />
		<result property="phonenumber"  column="phonenumber"  />
		<result property="sex"          column="sex"          />
		<result property="status"       column="status"       />
		<result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="remark"       column="remark"       />
		<result property="address"       column="address"       />
		<result property="isPartyMember" column="is_party_member"/>
		<result property="isLeagueMember" column="is_league_member"/>
		<result property="isRanks" 		column="is_ranks"/>
		<result property="leaderFlag" 		column="leader_flag"/>
		<association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
		<collection  property="roles"   javaType="java.util.List"        resultMap="RoleResult" />
		<collection  property="posts"   javaType="java.util.List"        resultMap="PostResult" />
		<collection  property="regions"   javaType="java.util.List"        resultMap="RegionResult" />
	</resultMap>



		<resultMap id="deptResult" type="SysDept">
			<id     property="deptId"   column="dept_id"     />
			<result property="parentId" column="parent_id"   />
			<result property="deptName" column="dept_name"   />
			<result property="orderNum" column="order_num"   />
			<result property="leader"   column="leader"      />
			<result property="status"   column="dept_status" />
		</resultMap>

		<resultMap id="RoleResult" type="SysRole">
			<id     property="roleId"       column="role_id"        />
			<result property="roleName"     column="role_name"      />
			<result property="roleKey"      column="role_key"       />
			<result property="roleSort"     column="role_sort"      />
			<result property="dataScope"    column="data_scope"     />
			<result property="status"       column="role_status"    />
		</resultMap>

		<resultMap id="PostResult" type="SysPost">
			<id     property="postId"       column="post_id"        />
			<result property="postName"     column="post_name"      />
		</resultMap>

		<resultMap id="RegionResult" type="SysRegion">
			<id     property="regionId"       column="region_id"        />
			<result property="regionName"     column="region_name"      />
		</resultMap>

	<sql id="selectUserVo">
        select  u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar,
        u.phonenumber, u.sex, u.password, u.salt, u.status, u.del_flag, u.login_ip, u.login_date,
        u.create_time, u.remark,u.is_ranks,u.leader_flag,
       		    d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status,
       		    r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status,u.address,u.is_party_member ,u.is_league_member
		from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
    </sql>

	<select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
		select u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar, u.phonenumber, u.password,
		u.sex, u.salt, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, u.leader_flag,u.is_ranks,
		d.dept_name, d.leader from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		where u.del_flag = '0'
		<if test="loginName != null and loginName != ''">
			AND u.login_name like concat('%', #{loginName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET (#{deptId},ancestors) ))
		</if>
		<if test="userIds != null">
			AND u.user_id in
			<foreach collection="userIds" item="userId" open="(" separator="," close=")">
				#{userId}
			</foreach>
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="queryUser" parameterType="com.ruoyi.system.domain.HkEarlyWarning.SysUserVo"
			resultType="com.ruoyi.system.domain.HkEarlyWarning.SysUserResultVo">
		select
		u.user_id as userId,
		u.dept_id as deptId,
		u.login_name as loginName,
		u.user_name as userName,
		u.user_type as userType,
		u.email,
		u.avatar,
		u.phonenumber,
		u.password,
		u.sex,
		u.salt,
		u.status,
		u.create_time as createTime,
		u.update_time as updateTime,
		u.remark
		from sys_user u
		where u.del_flag = '0'
		<if test="loginName != null and loginName != ''">
			AND u.login_name like concat('%', #{loginName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<if test="userIds != null">
			AND u.user_id in
			<foreach collection="userIds" item="userId" open="(" separator="," close=")">
				#{userId}
			</foreach>
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectAllocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar, u.phonenumber, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and r.role_id = #{roleId}
	    <if test="loginName != null and loginName != ''">
			AND u.login_name like concat('%', #{loginName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectCanBeChoose" parameterType="java.util.Map" resultType="com.ruoyi.system.domain.HkEntity.UserInfoDto">
		select distinct
		u.user_id as userId,
		u.user_name as userName,
		u.sex as sex,
		u.phonenumber as phone,
		d.dept_name as deptName
		from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		where u.del_flag = '0'
		AND u.user_id &lt;&gt; 1
		<if test="searchValue != null and searchValue != ''">
			AND concat(u.user_name,u.phonenumber,d.dept_name) like concat('%', #{searchValue}, '%')
		</if>
		<if test="userId != null and userId != ''">
			AND u.user_id = #{userId}
		</if>
		<if test="deptId != null">
			AND d.dept_Id = #{deptId}
		</if>
		<if test="notDeptId != null">
			AND d.dept_Id &lt;&gt; #{notDeptId}
		</if>
		<if test="notUserId != null">
			AND u.user_id &lt;&gt; #{notUserId}
		</if>
		GROUP BY u.user_id
	</select>

	<select id="selectUnallocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar, u.phonenumber, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
	    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
	    <if test="loginName != null and loginName != ''">
			AND u.login_name like concat('%', #{loginName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<!--查询用户当前的部门，角色，职能-->
	<!--<select id="queryAllCanBeChoose" parameterType="java.lang.Long" resultMap="SysUserPostDeptRegionResult">
		select distinct u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar, u.phonenumber, u.status, u.create_time
		from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		left join sys_user_role ur on u.user_id = ur.user_id
		left join sys_role r on r.role_id = ur.role_id
		where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
		and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
		<if test="loginName != null and loginName != ''">
			AND u.login_name like concat('%', #{loginName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		&lt;!&ndash; 数据范围过滤 &ndash;&gt;
		${params.dataScope}
	</select>-->
	<select id="selectUserByidAndDelFalg" parameterType="SysUser" resultMap="SysUserResult">
		SELECT * FROM `sys_user` where user_id = #{userId} and del_flag = #{delFlag}
	</select>

	<select id="selectUserByLoginName" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.login_name = #{userName}
	</select>

	<select id="selectUserByPhoneNumber" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.phonenumber = #{phonenumber}
	</select>

	<select id="selectUserByEmail" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.email = #{email}
	</select>

	<select id="checkLoginNameUnique" parameterType="String" resultType="int">
		select count(1) from sys_user where login_name=#{loginName}
	</select>

	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, phonenumber from sys_user where phonenumber=#{phonenumber}
	</select>

	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email=#{email}
	</select>

	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId}
	</select>

	<delete id="deleteUserById" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id = #{userId}
 	</delete>

 	<delete id="deleteUserByIds" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach>
 	</delete>

	<delete id="deleteUserPostRegionByUserId">
		delete from sys_user_post_region where user_id = #{userId}
	</delete>

	<update id="updateUser" parameterType="SysUser">
 		update sys_user
 		<set>
 			<if test="deptId != null">dept_id = #{deptId},</if>
 			<if test="loginName != null and loginName != ''">login_name = #{loginName},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="userType != null and userType != ''">user_type = #{userType},</if>
 			<if test="email != null and email != ''">email = #{email},</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber = #{phonenumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="salt != null and salt != ''">salt = #{salt},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			<if test="openId != null and openId !=''">open_id = #{openId},</if>
			<if test="address != null and address !=''">address = #{address},</if>
			<if test="isPartyMember != null and isPartyMember !=''">is_party_member = #{isPartyMember},</if>
			<if test="isLeagueMember != null and isLeagueMember !=''">is_league_member = #{isLeagueMember},</if>
			<if test="leaderFlag != null and leaderFlag !=''">leader_flag = #{leaderFlag},</if>
 			update_time = sysdate()
 		</set>
 		where user_id = #{userId}
	</update>

 	<insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
 		insert into sys_user(
 			<if test="userId != null and userId != 0">user_id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="loginName != null and loginName != ''">login_name,</if>
 			<if test="userName != null and userName != ''">user_name,</if>
 			<if test="userType != null and userType != ''">user_type,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="salt != null and salt != ''">salt,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
			<if test="address != null and address != ''">address,</if>
			<if test="isPartyMember != null and isPartyMember != ''">is_party_member,</if>
			<if test="isLeagueMember != null and isLeagueMember != ''">is_league_member,</if>
			<if test="isRanks != null and isRanks != ''">is_ranks,</if>
			<if test="leaderFlag != null and leaderFlag != ''">leader_flag,</if>

 			create_time
 		)values(
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
 			<if test="loginName != null and loginName != ''">#{loginName},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
 			<if test="userType != null and userType != ''">#{userType},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="salt != null and salt != ''">#{salt},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
			<if test="address != null and address != ''">#{address},</if>
			<if test="isPartyMember != null and isPartyMember != ''">#{isPartyMember},</if>
			<if test="isLeagueMember != null and isLeagueMember != ''">#{isLeagueMember},</if>
			<if test="isRanks != null and isRanks != ''">#{isRanks},</if>
			<if test="leaderFlag != null and leaderFlag != ''">#{leaderFlag},</if>
		sysdate()
 		)
	</insert>


	<select id="findSysUserById" resultMap="SysUserResult" parameterType="java.lang.Integer">
		select user_name,email,phonenumber,sex from sys_user where user_id =#{userId}
	</select>

	<!--查询用户基本信息-->
	<select id="queryUserInfoById" resultMap="SysUserResult" parameterType="java.lang.Integer">
		select  u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar, u.phonenumber, u.sex, u.password, u.salt, u.status, u.del_flag, u.login_ip, u.login_date, u.create_time, u.remark,
       		    d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status,
       		    r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status,u.address,u.is_party_member ,u.is_league_member
		from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
			  where user_id =#{userId}
	</select>

	<select id="findUserName" resultMap="SysUserResult" parameterType="SysUser">
		select * from sys_user where user_id = #{userId}
	</select>

	<select id="findSysUserSignName" resultMap="SysUserResult" parameterType="SysUser">
		select * from sys_user where user_id = #{userId}
	</select>

	<select id="queryUserByOpenId" resultMap="SysUserResult" parameterType="String">
		select * from sys_user where open_id = #{openId}
	</select>

	<update id="updateOpenIdByUser" parameterType="SysUser">
		update sys_user
		set open_id = null
		where open_id = #{openId}
	</update>


	<insert id="insertSysuser" keyProperty="userId" useGeneratedKeys="true" parameterType="SysUser">
		insert into sys_user(
		dept_id,
		login_name,
		user_name,
		phonenumber,
		create_time,
		password
		)values (
		#{deptId},
		#{loginName},
		#{userName},
		#{phonenumber},
		#{createTime},
		#{password}
		)
	</insert>

	<select id="findUserCount" resultType="java.lang.Integer">
		select count(*) from sys_user where login_name = #{loginName} AND user_name=#{userName}
	</select>
	<!--	查询网格下所有的网格员-->
	<select id="findAllUserName" resultType="SysUser" parameterType="java.lang.String">
		SELECT
		any_value(b.user_name)as userName,
		GROUP_CONCAT(c.post_name) AS userPostName,
		a.user_id AS userId,
		b.phonenumber as phonenumber
		FROM sys_user_post_region a
		LEFT JOIN sys_user b ON a.user_id = b.user_id
		left join sys_post c on c.post_id = a.post_id
		where a.region_id=#{regionId}
		group by a.user_id
	</select>

	<insert id="insertUserPostRegion">
		insert into sys_user_post_region(user_id,post_id,region_id) values
		<foreach collection="list" item="list" separator=",">
			(#{list.userId},#{list.postId},#{list.regionId})
		</foreach>
	</insert>

	<select id="findUserCountByParam" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count( DISTINCT su.user_id) from sys_user su
		left join sys_user_post_region upr on su.user_id = upr.user_id
		left join sys_post sp on sp.post_id = upr.post_id
		<where>
			1 = 1
			<if test="currentDate != null and currentDate !=''">
				and date_format(su.login_date,'%Y-%m-%d') = #{currentDate}
			</if>
			<if test="trendWeekMonday !=null and trendWeekMonday !=''">
				and date_format(su.login_date,'%Y-%m-%d') >= #{trendWeekMonday}
			</if>
			<if test="trendMonthMonday !=null and trendMonthMonday != ''">
				and date_format(su.login_date,'%Y-%m-%d') >= #{trendMonthMonday}
			</if>
			<if test="postArr != null">
				and upr.post_id in
				<foreach collection="postArr" item="postId" open="(" separator="," close=")">
					#{postId}
				</foreach>
			</if>
		</where>
	</select>

	<select id="findUserPostByRegionId" resultType="SysUserPostRegionVo">
		SELECT
		any_value(a.user_id) AS userId,
		a.post_id AS postId,
		any_value(a.region_id) AS regionId,
		any_value(b.post_name) AS postName,
		any_value(COUNT(a.user_id)) as regionPostUserCount
		FROM
			sys_user_post_region a
		INNER JOIN sys_post b ON a.post_id = b.post_id
		where a.region_id = #{regionId}
		GROUP BY a.post_id
	</select>

	<select id="selectUserPostRegionByRidPid" resultType="SysUserPostRegion">
		select user_id as userId,post_id as postId,region_id as regionId
		from sys_user_post_region where region_id = #{regionId} and post_id = #{postId}
	</select>




	<select id="queryPeopleDisposalAnalysis" resultType="com.ruoyi.system.domain.HkEarlyWarning.PeopleDisposalAnalysisVO" parameterType="java.util.Map">
		select sr.user_name as `name`,count(srd1.userId) as `value` from sys_user sr
		left join
		(select srd.user_id as `userId` from sys_user_post_region srd
		inner join  sys_region sd on srd.region_id = sd.region_id
		inner join  hk_event_info hei on hei.region_index_code = sd.region_id
		<where>
			1 = 1
			<if test="currentDate != null and currentDate !=''">
				and date_format(hei.create_time,'%Y-%m-%d') = #{currentDate}
			</if>
			<if test="trendWeekMonday != null and trendWeekMonday !=''">
				and date_format(hei.create_time,'%Y-%m-%d') >= #{trendWeekMonday}
			</if>
			<if test="trendMonthMonday !=null and trendMonthMonday != ''">
				and date_format(hei.create_time,'%Y-%m-%d') >= #{trendMonthMonday}
			</if>
			<if test ="regionId != null and regionId !=''">
				and sd.region_id = #{regionId}
			</if>
			<if test="eventType !=null and eventType !=''">
				and hei.event_type = #{eventType}
			</if>
		</where>
		)srd1
		on  sr.user_id = srd1.userId
		group by sr.user_name
		order by value desc
		limit 5
	</select>


	<select id="queryPeopleDisposalAnalysisByRegionName" resultType="com.ruoyi.system.domain.HkEarlyWarning.PeopleDisposalAnalysisVO" parameterType="java.util.Map">
		select sr.user_name as `name`,count(srd1.userId) as `value` from sys_user sr
		left join (select srd.user_id as `userId` from sys_user_post_region srd
		inner join  sys_dept sd on srd.dept_id = sd.dept_id
		inner join  hk_event_info hei on hei.region_index_code = sd.dept_uuid
		<where>
			1 = 1
			<if test="currentDate != null and currentDate !=''">
				and date_format(hei.create_time,'%Y-%m-%d') = #{currentDate}
			</if>
			<if test="trendWeekMonday != null and trendWeekMonday !=''">
				and date_format(hei.create_time,'%Y-%m-%d') >= #{trendWeekMonday}
			</if>
			<if test="trendMonthMonday !=null and trendMonthMonday != ''">
				and date_format(hei.create_time,'%Y-%m-%d') >= #{trendMonthMonday}
			</if>
			<if test ="deptCode != null and deptCode !=''">
				and sd.dept_code = #{deptCode}
			</if>
			<if test="eventType !=null and eventType !=''">
				and hei.event_type = #{eventType}
			</if>
			<if test="deptName !=null and deptName !=''">
				and sd.dept_name = #{deptName}
			</if>
		</where>
		)srd1
		on  sr.user_id = srd1.userId
		group by sr.user_name
		order by value desc
		limit 5
	</select>


	<select id="queryPeopleTime" resultType="com.ruoyi.system.domain.HkEarlyWarning.PeopleTimeVO" parameterType="java.util.Map">
		select  sr.login_name as `loginName`,sr.user_name as  `name`,srd1.create_time as `createTime`,srd1.update_time as `updateTime` from sys_user sr
		left join (
		select srd.user_id as `userId`,hei.create_time,hei.update_time
		from sys_user_post_region srd
		inner join  sys_region sd on srd.region_id = sd.region_id
		inner join  hk_event_info hei on hei.region_index_code = sd.region_id
		<where>
			1 = 1
			<if test="currentDate != null and currentDate !=''">
				and date_format(hei.create_time,'%Y-%m-%d') = #{currentDate}
			</if>
			<if test="trendWeekMonday != null and trendWeekMonday !=''">
				and date_format(hei.create_time,'%Y-%m-%d') >= #{trendWeekMonday}
			</if>
			<if test="trendMonthMonday !=null and trendMonthMonday != ''">
				and date_format(hei.create_time,'%Y-%m-%d') >= #{trendMonthMonday}
			</if>
		</where>)srd1
		on sr.user_id = srd1.userId
		<where>
			del_flag = '0'
			<if test="accountStatus !=null and accountStatus !=''">
				and sr.status = #{accountStatus}
			</if>
		</where>
	</select>

	<!--通过角色名称查询用户信息-->
	<select id="selectUserByRoleName" resultMap="SysUserResult">
		select u.user_id, u.user_name from sys_user_role ur
		left join sys_user u
		on ur.user_id  = u.user_id
		left join sys_role r
		on ur.role_id = r.role_id
		where
		r.role_name = #{roleName}
	</select>
	<insert id="insertUserInfo" keyProperty="userId" useGeneratedKeys="true" parameterType="SysUser">

	</insert>
</mapper>
