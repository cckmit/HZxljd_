<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.XlAssessmentItemsMapper">
    
    <resultMap type="XlAssessmentItems" id="XlAssessmentItemsResult">
        <result property="assessmentId"    column="assessment_id"    />
        <result property="assessmentName"    column="assessment_name"    />
        <result property="createUser"    column="create_user"    />
        <result property="createDate"    column="create_date"    />
        <result property="updateUser"    column="update_user"    />
        <result property="updateDate"    column="update_date"    />
    </resultMap>

    <sql id="selectXlAssessmentItemsVo">
        select ai.assessment_id, ai.assessment_name, ai.create_user, ai.create_date, ai.update_user, ai.update_date, count(xs.subdivide_id) as counts from xl_assessment_items ai
        left join xl_subdivide xs on ai.assessment_id = xs.assessment_id
    </sql>

    <select id="selectXlAssessmentItemsList" parameterType="XlAssessmentItems" resultMap="XlAssessmentItemsResult">
        <include refid="selectXlAssessmentItemsVo"/>
        <where>  
            <if test="assessmentName != null  and assessmentName != ''"> and ai.assessment_name like concat('%', #{assessmentName}, '%')</if>
            <if test="createUser != null  and createUser != ''"> and ai.create_user = #{createUser}</if>
            <if test="createDate != null "> and ai.create_date = #{createDate}</if>
        </where>
        group by ai.assessment_id
    </select>
    
    <select id="selectXlAssessmentItemsById" parameterType="Long" resultMap="XlAssessmentItemsResult">
        <include refid="selectXlAssessmentItemsVo"/>
        where ai.assessment_id = #{assessmentId}
    </select>
        
    <insert id="insertXlAssessmentItems" parameterType="XlAssessmentItems" useGeneratedKeys="true" keyProperty="assessmentId">
        insert into xl_assessment_items
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="assessmentName != null  and assessmentName != ''">assessment_name,</if>
            <if test="createUser != null  and createUser != ''">create_user,</if>
            <if test="createDate != null ">create_date,</if>
            <if test="updateUser != null  and updateUser != ''">update_user,</if>
            <if test="updateDate != null ">update_date,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="assessmentName != null  and assessmentName != ''">#{assessmentName},</if>
            <if test="createUser != null  and createUser != ''">#{createUser},</if>
            <if test="createDate != null ">#{createDate},</if>
            <if test="updateUser != null  and updateUser != ''">#{updateUser},</if>
            <if test="updateDate != null ">#{updateDate},</if>
         </trim>
    </insert>

    <update id="updateXlAssessmentItems" parameterType="XlAssessmentItems">
        update xl_assessment_items
        <trim prefix="SET" suffixOverrides=",">
            <if test="assessmentName != null  and assessmentName != ''">assessment_name = #{assessmentName},</if>
            <if test="createUser != null  and createUser != ''">create_user = #{createUser},</if>
            <if test="createDate != null ">create_date = #{createDate},</if>
            <if test="updateUser != null  and updateUser != ''">update_user = #{updateUser},</if>
            <if test="updateDate != null ">update_date = #{updateDate},</if>
        </trim>
        where assessment_id = #{assessmentId}
    </update>

    <delete id="deleteXlAssessmentItemsById" parameterType="Long">
        delete from xl_assessment_items where assessment_id = #{assessmentId}
    </delete>

    <delete id="deleteXlAssessmentItemsByIds" parameterType="String">
        delete from xl_assessment_items where assessment_id in 
        <foreach item="assessmentId" collection="array" open="(" separator="," close=")">
            #{assessmentId}
        </foreach>
    </delete>
    
</mapper>